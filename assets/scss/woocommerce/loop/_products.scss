/* FILE: woocommerce/loop/_products.scss */

// Unfortunately, in some cases also a DIV wrapper has a class of `.products` so we need to use `ul` in selector below.
ul.products {

	.product {
		position: relative;
		margin: var(--wcti--spacing--gap--posts-list) calc( var(--wcti--spacing--gap--posts-list) / 2 );
	}

	.woocommerce-LoopProduct-link {
		@extend %clearfix;
		display: block;
		color: inherit;
	}

	a {
		text-decoration: none;
	}

	img {
		display: block;
		width: 100%;
		margin: 0 auto ( $ratio + em );
		border-radius: var(--wcti--border--radius);
		vertical-align: top;

		&[width][height] {
			object-fit: cover;
		}
	}

	h3 {
		margin: 0;
		font-weight: var(--wcti--font-weight--headings);

		&,
		&[class] {
			font-size: var(--wcti--font-size--heading--products-product);
		}
	}

	:where(body:not(.no-custom-loop-add-to-cart)) & {

		.button,
		.added_to_cart {
			display: block;
			padding: .25em 0;
			margin: 0;
			font-size: var(--wcti--font-size--xs);
			text-align: inherit;
			text-decoration: none;
			white-space: nowrap;

			&,
			&:hover,
			&:focus,
			&:active,
			&:visited {
				background: none;
				color: var(--wcti--color--accent);
				border: 0;
				box-shadow: none;
				animation: none;
			}
		}

		.button {
			margin-top: var(--wcti--spacing--margin--products-add-to-cart--top);

			&::before {
				content: '+ ';
				speak: none;
			}
		}
	}

	.added_to_cart {
		font-size: var(--wcti--font-size--xs);
		font-style: italic;

		&::after {
			content: ' \2192'; // &rarr;

			.rtl & {
				content: ' \2190'; // &larr;
			}
		}
	}
}

@keyframes loadingAddToCart {
	from {
		transform: scale( 1 );
	}
	to {
		transform: scale( .75 );
	}
}

$important: !important;

.ajax_add_to_cart {

	&::after {
		display: inline-block $important;
		margin: 0 $important;
		margin-inline-start: $ratio_min + em $important;
		font-family: inherit $important;
	}

	&.loading {
		opacity: 1 $important;

		&::after {
			animation: loadingAddToCart .6s linear infinite alternate $important;
			content: '⋯' $important;
		}
	}

	&.added::after {
		content: '✓' $important;
	}
}

$important: null;
